<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    xmlns:loc="clr-namespace:JobAlertManagerGUI;assembly=JobAlertManagerGUI"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">

    <loc:VisibilityConverter x:Key="VisibConverter" />
    <loc:InVisibilityConverter x:Key="InVisibConverter" />
    
    <SolidColorBrush x:Key="MainBackgroundBrush" Color="#FFEEF5EE" />
    <SolidColorBrush x:Key="BackgroundBrushScaleA" Color="#66EEF8EE" />
    <SolidColorBrush x:Key="BackgroundBrushScaleA_" Color="#FFEEF8EE" />
    <SolidColorBrush x:Key="BackgroundBrushScaleB" Color="#55F5FFF5" />
    <SolidColorBrush x:Key="BackgroundBrushScaleC" Color="#FFFAFAFA" />
    <SolidColorBrush x:Key="DarkerBackgroundBrush" Color="#FFD3E0E5" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />
    <SolidColorBrush x:Key="ListViewBorderBrush" Color="#FF828790" />
    <LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF" Offset="0.0"/>
                <GradientStop Color="#EEE" Offset="1.0"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style x:Key="MainBarButtonTextStyle" TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FF555555" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Foreground" Value="#FFDDDDDD" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="TextWrapping" Value="NoWrap"/>
        <Setter Property="TextTrimming" Value="None"/>
    </Style>
    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border1" CornerRadius="5" BorderThickness="1,1,1,3" OpacityMask="{x:Null}" Background="#FFEBECED">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FF4B4B4B"/>
                        </Border.BorderBrush>
                        <ContentPresenter Margin="2,0" HorizontalAlignment="Stretch"  VerticalAlignment="Center"  RecognizesAccessKey="True" Content="{TemplateBinding Content}" x:Name="contentPresenter"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border1">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FFF9B51F"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" TargetName="Border1" Value="1,1,1,3"/>
                            <Setter Property="Background" TargetName="Border1" Value="#FFFDFAFA"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsEnabled" TargetName="contentPresenter" Value="True"/>
                            <Setter Property="Background" TargetName="Border1" Value="{x:Null}"/>
                			<Setter Property="Foreground" Value="#FF6E6D6D"/>
                			<Setter Property="BorderBrush" TargetName="Border1" Value="#55000000"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border1" Value="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"/>
                            <Setter Property="Background" TargetName="Border1">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF0E0E0E" Offset="0"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                        <GradientStop Color="#FEE0DBDB" Offset="0.138"/>
                                        <GradientStop Color="#FEC1BEBE" Offset="0.938"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyle2" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border2" CornerRadius="6" BorderThickness="2" Background="#FF505050" OpacityMask="{x:Null}">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FF9B9B9B"/>
                        </Border.BorderBrush>
                        <ContentPresenter Margin="2,0" HorizontalAlignment="Stretch"  VerticalAlignment="Center"  RecognizesAccessKey="True" Content="{TemplateBinding Content}" x:Name="contentPresenter" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border2">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FFF9B51F"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="Border2" Value="#FF8E8E8E"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsEnabled" TargetName="contentPresenter" Value="True"/>
                            <Setter Property="Background" TargetName="Border2" Value="#FF3F3E3E"/>
                            <Setter Property="BorderBrush" TargetName="Border2" Value="#FF9B9B9B"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border2" Value="#FFB7B7B7"/>
                            <Setter Property="Background" TargetName="Border2" Value="#FF454444"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyle3" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border1" CornerRadius="3" BorderThickness="0,0,1,1" OpacityMask="{x:Null}" Background="{x:Null}">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FF4B4B4B"/>
                        </Border.BorderBrush>
                        <ContentPresenter Margin="5,0" HorizontalAlignment="Stretch"  VerticalAlignment="Center"  RecognizesAccessKey="True" Content="{TemplateBinding Content}" x:Name="contentPresenter"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border1">
                                <Setter.Value>
                                    <SolidColorBrush Color="#FFF9B51F"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" TargetName="Border1" Value="0,0,1,1"/>
                            <Setter Property="Background" TargetName="Border1" Value="{x:Null}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="IsEnabled" TargetName="contentPresenter" Value="True"/>
                            <Setter Property="Background" TargetName="Border1" Value="{x:Null}"/>
                			<Setter Property="Foreground" Value="#FF6E6D6D"/>
                			<Setter Property="BorderBrush" TargetName="Border1" Value="#55000000"/>
                			<Setter Property="Margin" TargetName="contentPresenter" Value="5,0"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border1" Value="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}"/>
                            <Setter Property="Background" TargetName="Border1">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF0E0E0E" Offset="0"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="1"/>
                                        <GradientStop Color="#FEE0DBDB" Offset="0.138"/>
                                        <GradientStop Color="#FEC1BEBE" Offset="0.938"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="SimpleButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="bdr" BorderBrush="Transparent" BorderThickness="2" CornerRadius="5" Background="Transparent" Padding="2">
            <ContentPresenter x:Name="content"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" TargetName="bdr" Value="#DDFFFFFF"/>
                <Setter Property="Background" TargetName="bdr" Value="#AAFFFFFF"/>
                <Setter TargetName="content" Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="2" BlurRadius="2" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="SimpleButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template" Value="{StaticResource SimpleButtonTemplate}" />
    </Style>
    <ControlTemplate x:Key="SimpleButtonTemplate2" TargetType="{x:Type Button}">
        <Border x:Name="bdr" BorderBrush="Transparent" BorderThickness="2" CornerRadius="5" Background="Transparent" Padding="2">
            <ContentPresenter />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" TargetName="bdr" Value="SkyBlue"/>
                <Setter Property="Background" TargetName="bdr" Value="#AAFFFFFF"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="SeparatorStyle1" TargetType="{x:Type Separator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid Margin="0,1,0,1" SnapsToDevicePixels="true">
                        <Rectangle Fill="#E0E0E0" Margin="1,0,1,0" Height="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuStyle1" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}"/>
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border SnapsToDevicePixels="true" Background="{x:Null}" BorderThickness="0,0,0,2" Padding="{TemplateBinding Padding}" CornerRadius="5,5,5,5" BorderBrush="#FF5C5C5C" x:Name="border">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="#FFDEA405"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuItemStyle1" TargetType="{x:Type MenuItem}">
        <!--
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        -->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" Background="#FFFFFFFF" Margin="2,0" BorderThickness="1,1,1,1" BorderBrush="#FF939292" CornerRadius="5,5,5,5" VerticalAlignment="Stretch">
                        <Grid>

                            <!-- The Grid is used to hold together columns for an Icon, Content, Glyph checkmark and Arrow to show the next level
							 Size sharing is used in Grid so that the Icon, Content, Arrow for each MenuItem align together -->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="0"  SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="14"/>
                            </Grid.ColumnDefinitions>

                            <!-- ContentPresenter to show an Icon if needed -->
                            <ContentPresenter Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>

                            <!-- Glyph is a checkmark if needed for a checkable menu -->
                            <Grid Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                            </Grid>

                            <!-- Content for the menu text etc -->
                            <ContentPresenter Grid.Column="1" Margin="2,1,5,1" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header" VerticalAlignment="Center"/>

                            <!-- Arrow drawn path which points to the next level of the menu -->
                            <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center" Background="{x:Null}">
                                <Path x:Name="ArrowPanelPath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
                            </Grid>

                            <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" AllowsTransparency="true" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="0" Margin="0,0,0,0" HorizontalOffset="5" MaxHeight="550">
                                <Grid x:Name="SubMenu">
                                    <Border x:Name="SubMenuBorder" Background="{DynamicResource SelectedBackgroundBrush}" BorderBrush="{x:Null}" BorderThickness="1,1,2,2"/>
                                    <!-- StackPanel holds children of the menu. This is set bu IsItemsHost=True -->
                                    <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                        <VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" CanVerticallyScroll="True" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>

                        </Grid>
                    </Border>

                    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                    <ControlTemplate.Triggers>

                        <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Margin" Value="0,1,0,1"/>
                            <Setter Property="Padding" Value="6,3,6,3"/>
                            <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>

                        <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Margin" Value="0,1,0,1"/>
                            <Setter Property="Padding" Value="6,3,6,3"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>

                        <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0,2,0,2"/>
                            <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                        </Trigger>

                        <!-- Role = SubMenuItem : this is a child menu item which has children-->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0,2,0,2"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                        </Trigger>

                        <!-- If no Icon is present the we collapse the Icon Content -->
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>

                        <!-- The GlyphPanel contains the CheckMark -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>

                        <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                            <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu"/>
                            <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu"/>
                            <Setter Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder"/>
                        </Trigger>

                        <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.AppWorkspaceBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuStyle2" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}"/>
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border SnapsToDevicePixels="true" Background="{x:Null}" BorderThickness="0,0,0,0" BorderBrush="{x:Null}" x:Name="border">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                        	<Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                        	<Setter Property="BorderThickness" TargetName="border" Value="0,0,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ContextMenuStyle2" TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.MenuBarBrushKey}}"/>
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border SnapsToDevicePixels="true" Background="{x:Null}" BorderThickness="0,0,0,0" BorderBrush="{x:Null}" x:Name="border">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="0,0,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuItemStyle2" TargetType="{x:Type MenuItem}">
        <!--
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        -->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" Background="#FF505050" BorderThickness="2,2,2,2" BorderBrush="#FFC8C8C8" CornerRadius="6,6,6,6" VerticalAlignment="Stretch">
                        <Grid Margin="0,0,0,0" VerticalAlignment="Center">

                            <!-- The Grid is used to hold together columns for an Icon, Content, Glyph checkmark and Arrow to show the next level
							 Size sharing is used in Grid so that the Icon, Content, Arrow for each MenuItem align together -->
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                <ColumnDefinition Width="14"/>
                            </Grid.ColumnDefinitions>

                            <!-- ContentPresenter to show an Icon if needed -->
                            <ContentPresenter Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>

                            <!-- Glyph is a checkmark if needed for a checkable menu -->
                            <Grid Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
                            </Grid>

                            <!-- Content for the menu text etc -->
                            <ContentPresenter Grid.Column="1" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header" VerticalAlignment="Center"/>

                            <!-- Arrow drawn path which points to the next level of the menu -->
                            <Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center" Background="{x:Null}">
                                <Path x:Name="ArrowPanelPath" VerticalAlignment="Center" Data="M0,0 L0,8 L4,4 z" Fill="#FFEEECEC"/>
                            </Grid>

                            <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" AllowsTransparency="true" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="0" Margin="0,0,0,0" HorizontalOffset="5">
                                <Grid x:Name="SubMenu">
                                    <Border x:Name="SubMenuBorder" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1"/>

                                    <!-- StackPanel holds children of the menu. This is set bu IsItemsHost=True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                </Grid>
                            </Popup>

                        </Grid>
                    </Border>

                    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                    <ControlTemplate.Triggers>

                        <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Margin" Value="0,1,0,1"/>
                            <Setter Property="Padding" Value="6,3,6,3"/>
                            <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>

                        <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Margin" Value="0,1,0,1"/>
                            <Setter Property="Padding" Value="6,3,6,3"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>

                        <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0,2,0,2"/>
                            <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                        </Trigger>

                        <!-- Role = SubMenuItem : this is a child menu item which has children-->
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="0,2,0,2"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
                        </Trigger>

                        <!-- If no Icon is present the we collapse the Icon Content -->
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>

                        <!-- The GlyphPanel contains the CheckMark -->
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
                        </Trigger>

                        <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                            <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu"/>
                            <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu"/>
                            <Setter Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder"/>
                        </Trigger>

                        <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.AppWorkspaceBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Border" Value="#FF3F3E3E"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="#FF9B9B9B"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="#FFB7B7B7"/>
                            <Setter Property="Background" TargetName="Border" Value="#FF454444"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False" >
                <Setter Property="Foreground" Value="#FF555555" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True" >
                <Setter Property="Foreground" Value="#FFDDDDDD" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="TextBoxAlertStyle0" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="#FFAAAAAA"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBoxAlertStyle1" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="#FFFD0000"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RichTextBoxAlertStyle0" TargetType="{x:Type RichTextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="#FFAAAAAA"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RichTextBox}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RichTextBoxAlertStyle1" TargetType="{x:Type RichTextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="#FFFD0000"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RichTextBox}">
                    <Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="SliderTemplate" TargetType="{x:Type Slider}">
        <Border BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar Fill="{TemplateBinding TextElement.Foreground}" Placement="Top" Name="TopTick" Height="3" Visibility="Collapsed" Grid.Row="0" />
                <TickBar Fill="{TemplateBinding TextElement.Foreground}" Placement="Bottom" Name="BottomTick" Height="3" Visibility="Collapsed" Grid.Row="2" />
                <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" Background="#FFF0EDE0" Height="4" Margin="5,0,5,0" VerticalAlignment="Center" Grid.Row="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStop Color="#FFAEB1AF" Offset="0.1" />
                                <GradientStop Color="#FFFFFFFF" Offset="0.2" />
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Canvas Margin="-6,-1,-6,-1">
                        <Rectangle Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" 
          			Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1" 
          			Name="PART_SelectionRange" Height="4" Visibility="Hidden" />
                    </Canvas>
                </Border>
                <Track Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton>
                            <RepeatButton.Command>
                                <RoutedCommand />
                            </RepeatButton.Command>
                            <RepeatButton.Style>
                                <Style TargetType="RepeatButton">
                                    <Style.Resources>
                                        <ResourceDictionary />
                                    </Style.Resources>
                                    <Setter Property="FrameworkElement.OverridesDefaultStyle">
                                        <Setter.Value>
                                            <s:Boolean>True</s:Boolean>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="UIElement.Focusable">
                                        <Setter.Value>
                                            <s:Boolean>False</s:Boolean>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="RepeatButton">
                                                <Border Background="#00FFFFFF" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Name="Thumb">
                            <Thumb.Style>
                                <Style TargetType="Thumb">
                                    <Style.Resources>
                                        <ResourceDictionary />
                                    </Style.Resources>
                                    <Setter Property="FrameworkElement.OverridesDefaultStyle">
                                        <Setter.Value>
                                            <s:Boolean>True</s:Boolean>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="FrameworkElement.Height">
                                        <Setter.Value>
                                            <s:Double>18</s:Double>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="FrameworkElement.Width">
                                        <Setter.Value>
                                            <s:Double>12</s:Double>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="TextElement.Foreground">
                                        <Setter.Value>
                                            <SolidColorBrush>#FF008000</SolidColorBrush>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Thumb">
                                                <Canvas SnapsToDevicePixels="True">
                                                    <Canvas.RenderTransform>
                                                        <TranslateTransform X="4.5" Y="8" />
                                                    </Canvas.RenderTransform>
                                                    <Path Data="M5,-5A1.5,1.5,0,0,0,3.5,-6.5L-3.5,-6.5A1.5,1.5,0,0,0,-5,-5L-5,5A1.5,1.5,0,0,0,-3.5,6.5L3.5,6.5A1.5,1.5,0,0,0,5,5z" Fill="#FFF3F3EF" Name="Background" />
                                                    <Path Data="M4.5,-4L4.5,-6 -4.5,-6 -4.5,-4z" StrokeThickness="1" Name="TopAccent">
                                                        <Path.Fill>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Color="#FF70D66F" Offset="0" />
                                                                    <GradientStop Color="#FF46CA44" Offset="1" />
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Path.Fill>
                                                    </Path>
                                                    <Path Data="M4.5,4L4.5,6 -4.5,6 -4.5,4z" StrokeThickness="1" Name="BottomAccent">
                                                        <Path.Fill>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Color="#FF46CA44" Offset="0" />
                                                                    <GradientStop Color="#FF1B9B1A" Offset="0.8" />
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Path.Fill>
                                                    </Path>
                                                    <Path Data="M5,-5A1.5,1.5,0,0,0,3.5,-6.5L-3.5,-6.5A1.5,1.5,0,0,0,-5,-5L-5,5A1.5,1.5,0,0,0,-3.5,6.5L3.5,6.5A1.5,1.5,0,0,0,5,5z" StrokeThickness="1" Name="OuterBorder">
                                                        <Path.Fill>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Color="#40FFFFFF" Offset="0" />
                                                                    <GradientStop Color="#00FFFFFF" Offset="0.3" />
                                                                    <GradientStop Color="#00000000" Offset="0.7" />
                                                                    <GradientStop Color="#40000000" Offset="1" />
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Path.Fill>
                                                        <Path.Stroke>
                                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                <LinearGradientBrush.GradientStops>
                                                                    <GradientStop Color="#FFBECBD3" Offset="0" />
                                                                    <GradientStop Color="#FF72838D" Offset="1" />
                                                                </LinearGradientBrush.GradientStops>
                                                            </LinearGradientBrush>
                                                        </Path.Stroke>
                                                    </Path>
                                                </Canvas>

                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="UIElement.IsMouseOver">
                                                        <Setter Property="Shape.Fill" TargetName="TopAccent">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStop Color="#FFFBCE7C" Offset="0" />
                                                                        <GradientStop Color="#FFF7B335" Offset="1" />
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Shape.Fill" TargetName="BottomAccent">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStop Color="#FFFAC055" Offset="0" />
                                                                        <GradientStop Color="#FFC7902A" Offset="0.8" />
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Trigger.Value>
                                                            <s:Boolean>True</s:Boolean>
                                                        </Trigger.Value>
                                                    </Trigger>
                                                    <Trigger Property="TextElement.Foreground">
                                                        <Setter Property="Shape.Fill" TargetName="TopAccent">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStop Color="#FFFBCE7C" Offset="0" />
                                                                        <GradientStop Color="#FFF7B335" Offset="1" />
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Shape.Fill" TargetName="BottomAccent">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStop Color="#FFFAC055" Offset="0" />
                                                                        <GradientStop Color="#FFC7902A" Offset="0.8" />
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Trigger.Value>
                                                            <SolidColorBrush>#FFFFA500</SolidColorBrush>
                                                        </Trigger.Value>
                                                    </Trigger>
                                                    <Trigger Property="Thumb.IsDragging">
                                                        <Setter Property="Shape.Fill" TargetName="TopAccent">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStop Color="#FF70BA66" Offset="0" />
                                                                        <GradientStop Color="#FF229412" Offset="1" />
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Shape.Fill" TargetName="BottomAccent">
                                                            <Setter.Value>
                                                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                                    <LinearGradientBrush.GradientStops>
                                                                        <GradientStop Color="#FF46A638" Offset="0" />
                                                                        <GradientStop Color="#FF1B770E" Offset="0.8" />
                                                                    </LinearGradientBrush.GradientStops>
                                                                </LinearGradientBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Trigger.Value>
                                                            <s:Boolean>True</s:Boolean>
                                                        </Trigger.Value>
                                                    </Trigger>
                                                    <Trigger Property="UIElement.IsEnabled">
                                                        <Setter Property="Shape.Fill" TargetName="Background">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FFF5F4EA</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FFD6D4C6</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Shape.Fill" TargetName="TopAccent">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FFD2D0C6</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Shape.Fill" TargetName="BottomAccent">
                                                            <Setter.Value>
                                                                <SolidColorBrush>#FFBCBAAE</SolidColorBrush>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Trigger.Value>
                                                            <s:Boolean>False</s:Boolean>
                                                        </Trigger.Value>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton>
                            <RepeatButton.Command>
                                <RoutedCommand />
                            </RepeatButton.Command>
                            <RepeatButton.Style>
                                <Style TargetType="RepeatButton">
                                    <Style.Resources>
                                        <ResourceDictionary />
                                    </Style.Resources>
                                    <Setter Property="FrameworkElement.OverridesDefaultStyle">
                                        <Setter.Value>
                                            <s:Boolean>True</s:Boolean>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="KeyboardNavigation.IsTabStop">
                                        <Setter.Value>
                                            <s:Boolean>False</s:Boolean>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="UIElement.Focusable">
                                        <Setter.Value>
                                            <s:Boolean>False</s:Boolean>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Control.Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="RepeatButton">
                                                <Border Background="#00FFFFFF" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </RepeatButton.Style>
                        </RepeatButton>
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Slider.TickPlacement">
                <Setter Property="UIElement.Visibility" TargetName="TopTick">
                    <Setter.Value>
                        <x:Static Member="Visibility.Visible" />
                    </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.Style" TargetName="Thumb">
                    <Setter.Value>
                        <Style TargetType="Thumb">
                            <Style.Resources>
                                <ResourceDictionary />
                            </Style.Resources>
                            <Setter Property="FrameworkElement.OverridesDefaultStyle">
                                <Setter.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Height">
                                <Setter.Value>
                                    <s:Double>18</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Width">
                                <Setter.Value>
                                    <s:Double>12</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <SolidColorBrush>#FF008000</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Thumb">
                                        <Canvas SnapsToDevicePixels="True">
                                            <Canvas.RenderTransform>
                                                <TransformGroup>
                                                    <TransformGroup.Children>
                                                        <RotateTransform Angle="180" />
                                                        <TranslateTransform X="5.5" Y="7.5" />
                                                    </TransformGroup.Children>
                                                </TransformGroup>
                                            </Canvas.RenderTransform>
                                            <Path Data="M5,-3A1.5,1.5,0,0,0,3.5,-3.5L-3.5,-3.5A1.5,1.5,0,0,0,-5,-3L-5,5.5 0,10.5 5,5.5z" 
                    				Fill="#FFF3F3EF" Name="Background" />
                                            <Path Data="M4.5,-0L4.5,-4 -4.5,-4 -4.5,-0z" StrokeThickness="1" Name="TopAccent">
                                                <Path.Fill>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Color="#FF46CA44" Offset="1" />
                                                            <GradientStop Color="#FF1B9B1A" Offset="0" />
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                            </Path>
                                            <Path Data="M4.5,4L0,8.5 -4.5,4 -4.5,5 0,10 4.5,5z" StrokeThickness="1" Name="BottomAccent">
                                                <Path.Fill>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Color="#FF70D66F" Offset="1" />
                                                            <GradientStop Color="#FF46CA44" Offset="0.2" />
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                            </Path>
                                            <Path Data="M5,-3A1.5,1.5,0,0,0,3.5,-3.5L-3.5,-3.5A1.5,1.5,0,0,0,-5,-3L-5,5.5 0,10.5 5,5.5z" 
                    				StrokeThickness="1" Name="OuterBorder">
                                                <Path.Fill>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Color="#40FFFFFF" Offset="1" />
                                                            <GradientStop Color="#00FFFFFF" Offset="0.7" />
                                                            <GradientStop Color="#00000000" Offset="0.3" />
                                                            <GradientStop Color="#40000000" Offset="0" />
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                                <Path.Stroke>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Color="#FFBECBD3" Offset="1" />
                                                            <GradientStop Color="#FF72838D" Offset="0" />
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Path.Stroke>
                                            </Path>
                                        </Canvas>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="UIElement.IsMouseOver">
                                                <Setter Property="Shape.Fill" TargetName="TopAccent">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Color="#FFFAC055" Offset="1" />
                                                                <GradientStop Color="#FFC7902A" Offset="0" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Fill" TargetName="BottomAccent">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Color="#FFFBCE7C" Offset="1" />
                                                                <GradientStop Color="#FFF7B335" Offset="0.2" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Trigger.Value>
                                                    <s:Boolean>True</s:Boolean>
                                                </Trigger.Value>
                                            </Trigger>
                                            <Trigger Property="TextElement.Foreground">
                                                <Setter Property="Shape.Fill" TargetName="TopAccent">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Color="#FFFAC055" Offset="1" />
                                                                <GradientStop Color="#FFC7902A" Offset="0" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Fill" TargetName="BottomAccent">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Color="#FFFBCE7C" Offset="1" />
                                                                <GradientStop Color="#FFF7B335" Offset="0.2" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Trigger.Value>
                                                    <SolidColorBrush>#FFFFA500</SolidColorBrush>
                                                </Trigger.Value>
                                            </Trigger>
                                            <Trigger Property="Thumb.IsDragging">
                                                <Setter Property="Shape.Fill" TargetName="TopAccent">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Color="#FF46A638" Offset="1" />
                                                                <GradientStop Color="#FF1B770E" Offset="0" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Fill" TargetName="BottomAccent">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Color="#FF46A638" Offset="1" />
                                                                <GradientStop Color="#FF1B770E" Offset="0" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Trigger.Value>
                                                    <s:Boolean>True</s:Boolean>
                                                </Trigger.Value>
                                            </Trigger>
                                            <Trigger Property="UIElement.IsEnabled">
                                                <Setter Property="Shape.Fill" TargetName="Background">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#FFF5F4EA</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#FFD6D4C6</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Fill" TargetName="TopAccent">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#FFBBB9AD</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Fill" TargetName="BottomAccent">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Trigger.Value>
                                                    <s:Boolean>False</s:Boolean>
                                                </Trigger.Value>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="TickPlacement.TopLeft" />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="Slider.TickPlacement">
                <Setter Property="UIElement.Visibility" TargetName="BottomTick">
                    <Setter.Value>
                        <x:Static Member="Visibility.Visible" />
                    </Setter.Value>
                </Setter>
                <Setter Property="FrameworkElement.Style" TargetName="Thumb">
                    <Setter.Value>
                        <Style TargetType="Thumb">
                            <Style.Resources>
                                <ResourceDictionary />
                            </Style.Resources>
                            <Setter Property="FrameworkElement.OverridesDefaultStyle">
                                <Setter.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Height">
                                <Setter.Value>
                                    <s:Double>18</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Width">
                                <Setter.Value>
                                    <s:Double>12</s:Double>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="TextElement.Foreground">
                                <Setter.Value>
                                    <SolidColorBrush>#FF008000</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Thumb">
                                        <Canvas SnapsToDevicePixels="True">
                                            <Canvas.RenderTransform>
                                                <TranslateTransform X="5.5" Y="7" />
                                            </Canvas.RenderTransform>
                                            <Path Data="M5,-3.0A1.5,1.5,0,0,0,3.5,-3.5L-4.0,-3.5A1.5,1.5,0,0,0,-5,-3L-5,5.5 0,10.5 5,5.5z" 
                    				Fill="#FFF3F3EF" Name="Background" />
                                            <Path Data="M4.5,0L4.5,-4 -4.5,-4 -4.5,-0z" StrokeThickness="1" Name="TopAccent">
                                                <Path.Fill>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Color="#FF70D66F" Offset="0" />
                                                            <GradientStop Color="#FF46CA44" Offset="1" />
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                            </Path>
                                            <Path Data="M4.5,4L0,8.5 -4.5,4 -4.5,5 0,10 4.5,5z" StrokeThickness="1" Name="BottomAccent">
                                                <Path.Fill>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Color="#FF46CA44" Offset="0" />
                                                            <GradientStop Color="#FF1B9B1A" Offset="0.8" />
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                            </Path>
                                            <Path Data="M5,-3.0A1.5,1.5,0,0,0,3.5,-3.5L-4.0,-3.5A1.5,1.5,0,0,0,-5,-3L-5,5.5 0,10.5 5,5.5z" 
                    				StrokeThickness="1" Name="OuterBorder">
                                                <Path.Fill>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Color="#40FFFFFF" Offset="0" />
                                                            <GradientStop Color="#00FFFFFF" Offset="0.3" />
                                                            <GradientStop Color="#00000000" Offset="0.7" />
                                                            <GradientStop Color="#40000000" Offset="1" />
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Path.Fill>
                                                <Path.Stroke>
                                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                        <LinearGradientBrush.GradientStops>
                                                            <GradientStop Color="#FFBECBD3" Offset="0" />
                                                            <GradientStop Color="#FF72838D" Offset="1" />
                                                        </LinearGradientBrush.GradientStops>
                                                    </LinearGradientBrush>
                                                </Path.Stroke>
                                            </Path>
                                        </Canvas>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="UIElement.IsMouseOver">
                                                <Setter Property="Shape.Fill" TargetName="TopAccent">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Color="#FFFBCE7C" Offset="0" />
                                                                <GradientStop Color="#FFF7B335" Offset="1" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Fill" TargetName="BottomAccent">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Color="#FFFAC055" Offset="0" />
                                                                <GradientStop Color="#FFC7902A" Offset="0.8" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Trigger.Value>
                                                    <s:Boolean>True</s:Boolean>
                                                </Trigger.Value>
                                            </Trigger>
                                            <Trigger Property="TextElement.Foreground">
                                                <Setter Property="Shape.Fill" TargetName="TopAccent">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Color="#FFFBCE7C" Offset="0" />
                                                                <GradientStop Color="#FFF7B335" Offset="1" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Fill" TargetName="BottomAccent">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Color="#FFFAC055" Offset="0" />
                                                                <GradientStop Color="#FFC7902A" Offset="0.8" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Trigger.Value>
                                                    <SolidColorBrush>#FFFFA500</SolidColorBrush>
                                                </Trigger.Value>
                                            </Trigger>
                                            <Trigger Property="Thumb.IsDragging">
                                                <Setter Property="Shape.Fill" TargetName="TopAccent">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Color="#FF70BA66" Offset="0" />
                                                                <GradientStop Color="#FF229412" Offset="1" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Fill" TargetName="BottomAccent">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                            <LinearGradientBrush.GradientStops>
                                                                <GradientStop Color="#FF46A638" Offset="0" />
                                                                <GradientStop Color="#FF1B770E" Offset="0.8" />
                                                            </LinearGradientBrush.GradientStops>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Trigger.Value>
                                                    <s:Boolean>True</s:Boolean>
                                                </Trigger.Value>
                                            </Trigger>
                                            <Trigger Property="UIElement.IsEnabled">
                                                <Setter Property="Shape.Fill" TargetName="Background">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#FFF5F4EA</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Stroke" TargetName="OuterBorder">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#FFD6D4C6</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Fill" TargetName="TopAccent">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#FFD2D0C6</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="Shape.Fill" TargetName="BottomAccent">
                                                    <Setter.Value>
                                                        <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Trigger.Value>
                                                    <s:Boolean>False</s:Boolean>
                                                </Trigger.Value>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="TickPlacement.BottomRight" />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="Slider.TickPlacement">
                <Setter Property="UIElement.Visibility" TargetName="TopTick">
                    <Setter.Value>
                        <x:Static Member="Visibility.Visible" />
                    </Setter.Value>
                </Setter>
                <Setter Property="UIElement.Visibility" TargetName="BottomTick">
                    <Setter.Value>
                        <x:Static Member="Visibility.Visible" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <x:Static Member="TickPlacement.Both" />
                </Trigger.Value>
            </Trigger>
            <Trigger Property="Slider.IsSelectionRangeEnabled">
                <Setter Property="UIElement.Visibility" TargetName="PART_SelectionRange">
                    <Setter.Value>
                        <x:Static Member="Visibility.Visible" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused">
                <Setter Property="TextElement.Foreground" TargetName="Thumb">
                    <Setter.Value>
                        <SolidColorBrush>#FFFFA500</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="TreeViewItemControlTemplate2" TargetType="{x:Type TreeViewItem}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="19" Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Width" Value="19"/>
                        <Setter Property="Height" Value="13"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Width="19" Height="13" Background="#00FFFFFF">
                                        <Border Width="9" Height="9" SnapsToDevicePixels="True" BorderBrush="#FF7898B5" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.2"/>
                                                    <GradientStop Color="#FFC0B7A6" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Path Fill="#FF000000" Margin="1,1,1,1" x:Name="ExpandPath" Data="M0,2L0,3 2,3 2,5 3,5 3,3 5,3 5,2 3,2 3,0 2,0 2,2z"/>
                                        </Border>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Data" TargetName="ExpandPath" Value="M0,2L0,3 5,3 5,2z"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
            <Border x:Name="Bd" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Column="1">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}"/>
            </Border>
            <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="#FFDDDDDD" BorderThickness="1,0,0,0" Padding="{TemplateBinding Padding}"  Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1">
                <ItemsPresenter x:Name="ItemsHost" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="False">
                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="HasItems" Value="False">
                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" TargetName="Bd" Value="#AAAAAAAA"/>
                <!--{DynamicResource {x:Static SystemColors.HighlightBrushKey}}-->
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border"
                        Background="{StaticResource LightBrush}"
                        BorderBrush="{StaticResource SolidBorderBrush}"
                        BorderThickness="1"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}">
                        <ContentPresenter
                            Margin="4" 
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="Border" Property="SnapsToDevicePixels" Value="true"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="4,4,21,4" SnapsToDevicePixels="true"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#EBEBEB" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">
                        <Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path x:Name="Arrow" Fill="Black" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center" Data="{StaticResource DownArrowGeometry}"/>
                        </Grid>
                    </Microsoft_Windows_Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" StartPoint="0,0" MappingMode="Absolute">
        <GradientStop Color="#ABADB3" Offset="0.05"/>
        <GradientStop Color="#E2E3EA" Offset="0.07"/>
        <GradientStop Color="#E3E9EF" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" Background="White" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" FontSize="10.667" ForceCursor="True">
                    	<ScrollViewer.BorderBrush>
                    		<SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}"/>
                    	</ScrollViewer.BorderBrush>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" Width="Auto" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RoundCorners="false" HorizontalAlignment="Right">
                        <Path x:Name="Arrow" Fill="Black" HorizontalAlignment="Center" Margin="3,1,3,0" VerticalAlignment="Center" Data="{StaticResource DownArrowGeometry}"/>
                    </Microsoft_Windows_Themes:ButtonChrome>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
        <Border BorderBrush="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" BorderThickness="1" CornerRadius="2" Background="White">
    		<Grid x:Name="Placement" SnapsToDevicePixels="true" Width="Auto" Height="Auto">
    			<Grid.ColumnDefinitions>
    				<ColumnDefinition/>
    				<ColumnDefinition Width="Auto" MinWidth="17"/>
    			</Grid.ColumnDefinitions>
    			<Popup x:Name="PART_Popup" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Grid.ColumnSpan="2">
    				<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}" Color="Transparent">
    					<Border x:Name="DropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
    						<ScrollViewer>
    							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
    						</ScrollViewer>
    					</Border>
    				</Microsoft_Windows_Themes:SystemDropShadowChrome>
    			</Popup>
    			<Microsoft_Windows_Themes:ListBoxChrome x:Name="Border" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" RenderMouseOver="{TemplateBinding IsMouseOver}"/>
    			<TextBox x:Name="PART_EditableTextBox" Margin="1,0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Background="White" HorizontalAlignment="Stretch" Width="Auto" FontSize="11" BorderThickness="1,1,0,1" />
    			<ToggleButton Style="{StaticResource ComboBoxToggleButton}" Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,1,0,1" HorizontalAlignment="Right"/>
    		</Grid>
    	</Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                <Setter Property="Foreground" Value="Black"/>
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="true">
                <Setter Property="RenderFocused" TargetName="Border" Value="true"/>
            </Trigger>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                <Setter Property="Background" Value="#FFF4F4F4"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="4,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border BorderBrush="{DynamicResource {x:Static SystemColors.ActiveCaptionBrushKey}}" BorderThickness="1" CornerRadius="2" Background="White">
                        <Grid x:Name="MainGrid" Width="Auto" Height="Auto" SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="17"/>
                            </Grid.ColumnDefinitions>
                            <Popup x:Name="PART_Popup" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Grid.ColumnSpan="2">
                                <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}" Color="Transparent">
                                    <Border x:Name="DropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                                        <ScrollViewer>
                                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Microsoft_Windows_Themes:SystemDropShadowChrome>
                            </Popup>
                            <ContentPresenter Grid.Column="0" x:Name="contentPresenter" Margin="3,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                            <ToggleButton Style="{StaticResource ComboBoxToggleButton}" Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,1,0,1" HorizontalAlignment="Right"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Background" Value="#FFF4F4F4"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Padding" Value="3"/>
                <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <!--
                        <TabPanel Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" Margin="0,0,4,-1" IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1"
                            Background="Transparent" ScrollViewer.CanContentScroll="False" />
                        -->
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                            <StackPanel Name="HeaderPanel" Grid.Row="0" Margin="0,0,4,-1" IsItemsHost="True"
                                        KeyboardNavigation.TabIndex="1"
                                        Background="Transparent" ScrollViewer.CanContentScroll="False" Orientation="Horizontal" />
                        </ScrollViewer>
                        <Border 
                            Name="Border" 
                            Grid.Row="1" 
                            Background="{StaticResource WindowBackgroundBrush}" 
                            BorderBrush="{StaticResource SolidBorderBrush}" 
                            BorderThickness="1" 
                            CornerRadius="2" 
                            KeyboardNavigation.TabNavigation="Local"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2" >
                            <ContentPresenter Name="PART_SelectedContentHost" Margin="2" ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabControlStyle1" TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <!--
                        <TabPanel Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" Margin="0,0,4,-1" IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1"
                            Background="Transparent" ScrollViewer.CanContentScroll="False" />
                        -->
                        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                            <StackPanel Name="HeaderPanel" Grid.Row="0" Margin="0,0,4,-1" IsItemsHost="True"
                                        KeyboardNavigation.TabIndex="1"
                                        Background="Transparent" ScrollViewer.CanContentScroll="False" Orientation="Horizontal" />
                        </ScrollViewer>
                        <Border 
                            Name="Border" 
                            Grid.Row="1" 
                            Background="{StaticResource WindowBackgroundBrush}" 
                            BorderBrush="{StaticResource SolidBorderBrush}" 
                            BorderThickness="1" 
                            CornerRadius="2" 
                            KeyboardNavigation.TabNavigation="Local"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2" >
                            <ContentPresenter Name="PART_SelectedContentHost" Margin="2" ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- SimpleStyles: TabItem -->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border 
                               Name="Border"
                               Margin="0,0,-8,0"
                               BorderBrush="{StaticResource SolidBorderBrush}" 
                               BorderThickness="1,1,1,1" 
                               CornerRadius="12,2,0,0" >
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="#E5FFFFFF" Offset="0.0"/>
                                            <GradientStop Color="#FFDDDDDD" Offset="1.0"/>
                                            <GradientStop Color="#E5CBDFF8" Offset="0.754"/>
                                            <GradientStop Color="#F695BAEA" Offset="0.974"/>
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter x:Name="ContentSite"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                ContentSource="Header"
                                Margin="10,2,10,2"
                                RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Effect" TargetName="ContentSite">
                                <Setter.Value>
                                    <DropShadowEffect/>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource WindowBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFF3F3F3" Offset="0"/>
                    <GradientStop Color="#FFEBEBEB" Offset="0.556"/>
                    <GradientStop Color="#FFDDDDDD" Offset="0.728"/>
                    <GradientStop Color="#FFCDCDCD" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border 
                               Name="Border"
                               Margin="0,0,-8,0"
                               BorderBrush="{StaticResource SolidBorderBrush}" 
                               BorderThickness="1,1,1,1" 
                               CornerRadius="12,2,0,0" >
                        	<Border.Background>
                        		<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        			<LinearGradientBrush.GradientStops>
                        				<GradientStopCollection>
                        					<GradientStop Color="#E5FFFFFF" Offset="0.0"/>
                        					<GradientStop Color="#FFDDDDDD" Offset="1.0"/>
                        					<GradientStop Color="#E5CBDFF8" Offset="0.754"/>
                        					<GradientStop Color="#F695BAEA" Offset="0.974"/>
                        				</GradientStopCollection>
                        			</LinearGradientBrush.GradientStops>
                        		</LinearGradientBrush>
                        	</Border.Background>
                            <ContentPresenter x:Name="ContentSite"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                ContentSource="Header"
                                Margin="10,2,10,2"
                                RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Effect" TargetName="ContentSite">
                                <Setter.Value>
                                    <DropShadowEffect/>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                		<Trigger Property="IsSelected" Value="True">
                			<Setter Property="Panel.ZIndex" Value="100" />
                			<Setter TargetName="Border" Property="Background" Value="{StaticResource WindowBackgroundBrush}" />
                			<Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                		</Trigger>
                		<Trigger Property="IsEnabled" Value="False">
                			<Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                			<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                			<Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
                		</Trigger>
                	</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
        	<Setter.Value>
        		<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
        			<GradientStop Color="#FFF3F3F3" Offset="0"/>
        			<GradientStop Color="#FFEBEBEB" Offset="0.556"/>
        			<GradientStop Color="#FFDDDDDD" Offset="0.728"/>
        			<GradientStop Color="#FFCDCDCD" Offset="1"/>
        		</LinearGradientBrush>
        	</Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="TreeViewItemControlTemplate1" TargetType="{x:Type TreeViewItem}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="19" Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="Width" Value="19"/>
                        <Setter Property="Height" Value="13"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border Width="19" Height="13" Background="#00FFFFFF">
                                        <Border Width="9" Height="9" SnapsToDevicePixels="True" BorderBrush="#FF7898B5" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="1,1" StartPoint="0,0">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0.2"/>
                                                    <GradientStop Color="#FFC0B7A6" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Path Fill="#FF000000" Margin="1,1,1,1" x:Name="ExpandPath" Data="M0,2L0,3 2,3 2,5 3,5 3,3 5,3 5,2 3,2 3,0 2,0 2,2z"/>
                                        </Border>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Data" TargetName="ExpandPath" Value="M0,2L0,3 5,3 5,2z"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
            <Border x:Name="Bd" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Column="1">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}"/>
            </Border>
            <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="#FFDDDDDD" BorderThickness="1,0,0,0" Padding="{TemplateBinding Padding}"  Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1">
                <ItemsPresenter x:Name="ItemsHost" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="False">
                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="HasItems" Value="False">
                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" TargetName="Bd" Value="#AAAAAAAA"/>
                <!--{DynamicResource {x:Static SystemColors.HighlightBrushKey}}-->
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
                        <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898" Data="{StaticResource TreeArrow}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#F2F0140D"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#F2F0140D"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="RenderTransform" TargetName="ExpandPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#FF595959"/>
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF262626"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <PathGeometry x:Key="BtnArrow" Figures="M0,0 L0,6 L6,3 z"/>
    <Style x:Key="RightArrowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="11"/>
        <Setter Property="Height" Value="11"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent" Padding="2">
                        <Path x:Name="ExpandPath" Fill="Gray" Stroke="#FF989898" Data="{StaticResource BtnArrow}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#F2F0140D"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#F2F0140D"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LeftArrowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="11"/>
        <Setter Property="Height" Value="11"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent" Padding="2">
                        <Path x:Name="ExpandPath" Fill="Gray" Stroke="#FF989898" Data="{StaticResource BtnArrow}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#F2F0140D"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#F2F0140D"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UpArrowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="11"/>
        <Setter Property="Height" Value="11"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent" Padding="2">
                        <Path x:Name="ExpandPath" Fill="Gray" Stroke="#FF989898" Data="{StaticResource BtnArrow}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="-90" CenterX="3" CenterY="3"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#F2F0140D"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#F2F0140D"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DownArrowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="11"/>
        <Setter Property="Height" Value="11"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent" Padding="2">
                        <Path x:Name="ExpandPath" Fill="Gray" Stroke="#FF989898" Data="{StaticResource BtnArrow}">
                            <Path.RenderTransform>
                                <RotateTransform Angle="90" CenterX="3" CenterY="3"/>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="ExpandPath" Value="#F2F0140D"/>
                            <Setter Property="Fill" TargetName="ExpandPath" Value="#F2F0140D"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="AddMemberButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr" BorderBrush="Transparent" BorderThickness="1.5" CornerRadius="5" Background="Transparent" Padding="0.5">
                        <Image x:Name="img" Source="../Images/add.png" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="bdr" Value="#FF2872B6"/>
                            <Setter Property="Background" TargetName="bdr" Value="#AAFFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="EditMemberButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr" BorderBrush="Transparent" BorderThickness="1.5" CornerRadius="5" Background="Transparent" Padding="0.5">
                        <Image x:Name="img" Source="../Images/pencil.png" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="bdr" Value="#FF2872B6"/>
                            <Setter Property="Background" TargetName="bdr" Value="#AAFFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SubmitMemberEditButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr" BorderBrush="Transparent" BorderThickness="1.5" CornerRadius="5" Background="Transparent" Padding="0.5">
                        <Image x:Name="img" Source="../Images/tick.png" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="bdr" Value="#FF2872B6"/>
                            <Setter Property="Background" TargetName="bdr" Value="#AAFFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CancelMemberEditButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr" BorderBrush="Transparent" BorderThickness="1.5" CornerRadius="5" Background="Transparent" Padding="0.5">
                        <Image x:Name="img" Source="../Images/cross_script.png" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="bdr" Value="#FF2872B6"/>
                            <Setter Property="Background" TargetName="bdr" Value="#AAFFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RemoveMemberButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr" BorderBrush="Transparent" BorderThickness="1.5" CornerRadius="5" Background="Transparent" Padding="0.5">
                        <Image x:Name="img" Source="../Images/cross_script.png" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="bdr" Value="#FF2872B6"/>
                            <Setter Property="Background" TargetName="bdr" Value="#AAFFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RefreshButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="bdr" BorderBrush="Transparent" BorderThickness="1.5" CornerRadius="5" Background="Transparent" Padding="0.5">
                        <Image x:Name="img" Source="../Images/arrow_refresh.png" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="bdr" Value="#FF2872B6"/>
                            <Setter Property="Background" TargetName="bdr" Value="#AAFFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="img" Property="Source" Value="{x:Null}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>